-- VHDL Entity ece411.Stage_Memory.symbol
--
-- Created:
--          by - chng2.ews (linux-a1.ews.illinois.edu)
--          at - 00:31:30 10/31/13
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2012.1 (Build 6)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.NUMERIC_STD.all;

LIBRARY ece411;
USE ece411.LC3b_types.all;
USE ieee.std_logic_arith.all;

ENTITY Stage_Memory IS
   PORT( 
      DATAIN        : IN     LC3b_word;
      Load          : IN     std_logic;
      MARMuxsel     : IN     LC3b_4mux_sel;
      MDRMuxsel     : IN     LC3b_4mux_sel;
      MEM_ALUout    : IN     LC3b_word;
      MEM_PCPlus2   : IN     LC3b_word;
      MEM_TRAPVECT8 : IN     LC3b_word;
      MRESP_H       : IN     STD_LOGIC;
      RESET_L       : IN     std_logic;
      Read_H        : IN     STD_LOGIC;
      Write_H       : IN     STD_LOGIC;
      clk           : IN     std_logic;
      MEM_MARout    : OUT    LC3b_word;
      MEM_MDRout    : OUT    LC3b_word;
      MREAD_L       : OUT    std_logic;
      MWRITE_L      : OUT    std_logic
   );

-- Declarations

END Stage_Memory ;

--
-- VHDL Architecture ece411.Stage_Memory.struct
--
-- Created:
--          by - chng2.ews (linux-a1.ews.illinois.edu)
--          at - 00:31:31 10/31/13
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2012.1 (Build 6)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.NUMERIC_STD.all;

LIBRARY ece411;
USE ece411.LC3b_types.all;

LIBRARY mp3lib;

ARCHITECTURE struct OF Stage_Memory IS

   -- Architecture declarations

   -- Internal signal declarations
   SIGNAL F           : STD_LOGIC;
   SIGNAL F1          : STD_LOGIC;
   SIGNAL F2          : STD_LOGIC;
   SIGNAL F3          : STD_LOGIC;
   SIGNAL F4          : STD_LOGIC;
   SIGNAL F5          : STD_LOGIC;
   SIGNAL F6          : STD_LOGIC;
   SIGNAL F7          : STD_LOGIC;
   SIGNAL F8          : STD_LOGIC;
   SIGNAL LoadMAR     : std_logic;
   SIGNAL LoadMDR     : std_logic;
   SIGNAL MARMuxout   : LC3b_word;
   SIGNAL MDRMuxout   : LC3b_word;
   SIGNAL OUTPUT      : std_logic;
   SIGNAL SelHByteout : LC3b_word;
   SIGNAL SelLByteout : LC3b_word;

   -- Implicit buffer signal declarations
   SIGNAL MEM_MARout_internal : LC3b_word;
   SIGNAL MEM_MDRout_internal : LC3b_word;


   -- Component Declarations
   COMPONENT DelayRegister
   PORT (
      A : IN     std_logic;
      F : OUT    std_logic
   );
   END COMPONENT;
   COMPONENT Reg16
   PORT (
      Input  : IN     LC3b_word ;
      RESET  : IN     std_logic ;
      clk    : IN     std_logic ;
      load   : IN     std_logic ;
      Output : OUT    LC3b_word 
   );
   END COMPONENT;
   COMPONENT SelHByte
   PORT (
      A           : IN     LC3b_word;
      SelHByteout : OUT    LC3b_word
   );
   END COMPONENT;
   COMPONENT SelLByte
   PORT (
      A           : IN     LC3b_word;
      SelLByteout : OUT    LC3b_word
   );
   END COMPONENT;
   COMPONENT WordMux4
   PORT (
      A   : IN     LC3b_word ;
      B   : IN     LC3b_word ;
      C   : IN     LC3b_word ;
      D   : IN     LC3b_word ;
      Sel : IN     LC3b_4mux_sel ;
      F   : OUT    LC3b_word 
   );
   END COMPONENT;
   COMPONENT AND2
   PORT (
      A : IN     STD_LOGIC ;
      B : IN     STD_LOGIC ;
      F : OUT    STD_LOGIC 
   );
   END COMPONENT;
   COMPONENT AND3
   PORT (
      A : IN     STD_LOGIC ;
      B : IN     STD_LOGIC ;
      C : IN     STD_LOGIC ;
      F : OUT    STD_LOGIC 
   );
   END COMPONENT;
   COMPONENT COMP16
   PORT (
      A : IN     LC3B_WORD ;
      B : IN     LC3B_WORD ;
      F : OUT    STD_LOGIC 
   );
   END COMPONENT;
   COMPONENT NOT1
   PORT (
      A : IN     STD_LOGIC ;
      F : OUT    STD_LOGIC 
   );
   END COMPONENT;
   COMPONENT OR2
   PORT (
      A : IN     STD_LOGIC ;
      B : IN     STD_LOGIC ;
      F : OUT    STD_LOGIC 
   );
   END COMPONENT;

   -- Optional embedded configurations
   -- pragma synthesis_off
   FOR ALL : AND2 USE ENTITY mp3lib.AND2;
   FOR ALL : AND3 USE ENTITY mp3lib.AND3;
   FOR ALL : COMP16 USE ENTITY mp3lib.COMP16;
   FOR ALL : DelayRegister USE ENTITY ece411.DelayRegister;
   FOR ALL : NOT1 USE ENTITY mp3lib.NOT1;
   FOR ALL : OR2 USE ENTITY mp3lib.OR2;
   FOR ALL : Reg16 USE ENTITY ece411.Reg16;
   FOR ALL : SelHByte USE ENTITY ece411.SelHByte;
   FOR ALL : SelLByte USE ENTITY ece411.SelLByte;
   FOR ALL : WordMux4 USE ENTITY ece411.WordMux4;
   -- pragma synthesis_on


BEGIN

   -- Instance port mappings.
   U_2 : DelayRegister
      PORT MAP (
         A => Load,
         F => OUTPUT
      );
   MAR : Reg16
      PORT MAP (
         Input  => MARMuxout,
         RESET  => RESET_L,
         clk    => clk,
         load   => LoadMAR,
         Output => MEM_MARout_internal
      );
   MDR : Reg16
      PORT MAP (
         Input  => MDRMuxout,
         RESET  => RESET_L,
         clk    => clk,
         load   => LoadMDR,
         Output => MEM_MDRout_internal
      );
   aSelHByte : SelHByte
      PORT MAP (
         A           => MEM_ALUout,
         SelHByteout => SelHByteout
      );
   aSelLByte : SelLByte
      PORT MAP (
         A           => MEM_ALUout,
         SelLByteout => SelLByteout
      );
   MARMux : WordMux4
      PORT MAP (
         A   => MEM_PCPlus2,
         B   => MEM_ALUout,
         C   => MEM_MDRout_internal,
         D   => MEM_TRAPVECT8,
         Sel => MARMuxsel,
         F   => MARMuxout
      );
   MDRMux : WordMux4
      PORT MAP (
         A   => DATAIN,
         B   => SelHByteout,
         C   => SelLByteout,
         D   => MEM_ALUout,
         Sel => MDRMuxsel,
         F   => MDRMuxout
      );
   U_5 : AND2
      PORT MAP (
         A => Read_H,
         B => MRESP_H,
         F => F2
      );
   U_1 : AND3
      PORT MAP (
         A => F,
         B => F1,
         C => OUTPUT,
         F => LoadMAR
      );
   U_7 : AND3
      PORT MAP (
         A => F3,
         B => Write_H,
         C => F4,
         F => F5
      );
   U_11 : AND3
      PORT MAP (
         A => F7,
         B => Read_H,
         C => F6,
         F => F8
      );
   U_6 : COMP16
      PORT MAP (
         A => MEM_MARout_internal,
         B => MARMuxout,
         F => F4
      );
   U_12 : COMP16
      PORT MAP (
         A => MEM_MARout_internal,
         B => MARMuxout,
         F => F6
      );
   U_3 : NOT1
      PORT MAP (
         A => MRESP_H,
         F => F1
      );
   U_8 : NOT1
      PORT MAP (
         A => MRESP_H,
         F => F3
      );
   U_9 : NOT1
      PORT MAP (
         A => F5,
         F => MWRITE_L
      );
   U_10 : NOT1
      PORT MAP (
         A => MRESP_H,
         F => F7
      );
   U_13 : NOT1
      PORT MAP (
         A => F8,
         F => MREAD_L
      );
   U_0 : OR2
      PORT MAP (
         A => Read_H,
         B => Write_H,
         F => F
      );
   U_4 : OR2
      PORT MAP (
         A => F2,
         B => Write_H,
         F => LoadMDR
      );

   -- Implicit buffered output assignments
   MEM_MARout <= MEM_MARout_internal;
   MEM_MDRout <= MEM_MDRout_internal;

END struct;
