-- VHDL Entity ece411.Forwarding_Unit.symbol
--
-- Created:
--          by - chao16.ews (gelib-057-17.ews.illinois.edu)
--          at - 16:35:33 12/05/13
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2012.1 (Build 6)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.NUMERIC_STD.all;

LIBRARY ece411;
USE ece411.LC3b_types.all;

ENTITY Forwarding_Unit IS
   PORT( 
      CLK           : IN     STD_LOGIC;
      EXMuxsel      : IN     LC3B_4MUX_Sel;
      EX_ALU        : IN     LC3B_word;
      EX_BRAdd      : IN     LC3b_word;
      EX_MDR        : IN     LC3b_word;
      EX_PCPlus2    : IN     LC3b_word;
      EX_dest       : IN     LC3B_reg;
      EX_regWrite   : IN     STD_LOGIC;
      Load          : IN     STD_LOGIC;
      MEM_RFMux     : IN     LC3B_word;
      MEM_dest      : IN     LC3B_reg;
      MEM_regWrite  : IN     STD_LOGIC;
      RESET         : IN     STD_LOGIC;
      RFA_data      : IN     LC3b_word;
      RFA_register  : IN     LC3B_reg;
      RFB_data      : IN     LC3b_word;
      RFB_register  : IN     LC3B_reg;
      RFA_Forwarded : OUT    LC3B_word;
      RFB_Forwarded : OUT    LC3B_word
   );

-- Declarations

END Forwarding_Unit ;

--
-- VHDL Architecture ece411.Forwarding_Unit.struct
--
-- Created:
--          by - chao16.ews (gelib-057-17.ews.illinois.edu)
--          at - 16:35:33 12/05/13
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2012.1 (Build 6)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.NUMERIC_STD.all;

LIBRARY ece411;
USE ece411.LC3b_types.all;

LIBRARY mp3lib;

ARCHITECTURE struct OF Forwarding_Unit IS

   -- Architecture declarations

   -- Internal signal declarations
   SIGNAL A       : LC3B_WORD;
   SIGNAL A1      : LC3B_WORD;
   SIGNAL EX_Data : LC3B_WORD;
   SIGNAL F       : std_logic;
   SIGNAL F1      : STD_LOGIC;
   SIGNAL F10     : STD_LOGIC_VECTOR(15 DOWNTO 0);
   SIGNAL F12     : STD_LOGIC_VECTOR(2 DOWNTO 0);
   SIGNAL F14     : std_logic;
   SIGNAL F15     : STD_LOGIC;
   SIGNAL F16     : STD_LOGIC;
   SIGNAL F19     : STD_LOGIC_VECTOR(15 DOWNTO 0);
   SIGNAL F2      : std_logic;
   SIGNAL F20     : STD_LOGIC_VECTOR(2 DOWNTO 0);
   SIGNAL F22     : STD_LOGIC;
   SIGNAL F23     : std_logic;
   SIGNAL F24     : LC3B_WORD;
   SIGNAL F25     : LC3B_WORD;
   SIGNAL F3      : STD_LOGIC;
   SIGNAL F4      : STD_LOGIC;
   SIGNAL F5      : std_logic;
   SIGNAL F6      : std_logic;
   SIGNAL F7      : STD_LOGIC;
   SIGNAL F8      : STD_LOGIC;


   -- Component Declarations
   COMPONENT COMP3
   PORT (
      A : IN     LC3B_REG;
      B : IN     LC3B_REG;
      F : OUT    std_logic
   );
   END COMPONENT;
   COMPONENT AND2
   PORT (
      A : IN     STD_LOGIC ;
      B : IN     STD_LOGIC ;
      F : OUT    STD_LOGIC 
   );
   END COMPONENT;
   COMPONENT MUX2_16
   PORT (
      A   : IN     LC3B_WORD ;
      B   : IN     LC3B_WORD ;
      SEL : IN     STD_LOGIC ;
      F   : OUT    LC3B_WORD 
   );
   END COMPONENT;
   COMPONENT MUX4_16
   PORT (
      A   : IN     LC3B_WORD ;
      B   : IN     LC3B_WORD ;
      C   : IN     LC3B_WORD ;
      D   : IN     LC3B_WORD ;
      SEL : IN     STD_LOGIC_VECTOR (1 DOWNTO 0);
      F   : OUT    LC3B_WORD 
   );
   END COMPONENT;
   COMPONENT REG1
   PORT (
      RESET_L : IN     STD_LOGIC ;
      A       : IN     STD_LOGIC ;
      EN      : IN     STD_LOGIC ;
      CLK     : IN     STD_LOGIC ;
      F       : OUT    STD_LOGIC 
   );
   END COMPONENT;
   COMPONENT REG16
   PORT (
      RESET_L : IN     STD_LOGIC ;
      A       : IN     STD_LOGIC_VECTOR (15 DOWNTO 0);
      EN      : IN     STD_LOGIC ;
      CLK     : IN     STD_LOGIC ;
      F       : OUT    STD_LOGIC_VECTOR (15 DOWNTO 0)
   );
   END COMPONENT;
   COMPONENT REG3
   PORT (
      RESET_L : IN     STD_LOGIC ;
      A       : IN     STD_LOGIC_VECTOR (2 DOWNTO 0);
      EN      : IN     STD_LOGIC ;
      CLK     : IN     STD_LOGIC ;
      F       : OUT    STD_LOGIC_VECTOR (2 DOWNTO 0)
   );
   END COMPONENT;

   -- Optional embedded configurations
   -- pragma synthesis_off
   FOR ALL : AND2 USE ENTITY mp3lib.AND2;
   FOR ALL : COMP3 USE ENTITY ece411.COMP3;
   FOR ALL : MUX2_16 USE ENTITY mp3lib.MUX2_16;
   FOR ALL : MUX4_16 USE ENTITY mp3lib.MUX4_16;
   FOR ALL : REG1 USE ENTITY mp3lib.REG1;
   FOR ALL : REG16 USE ENTITY mp3lib.REG16;
   FOR ALL : REG3 USE ENTITY mp3lib.REG3;
   -- pragma synthesis_on


BEGIN

   -- Instance port mappings.
   U_0 : COMP3
      PORT MAP (
         A => EX_dest,
         B => RFA_register,
         F => F2
      );
   U_1 : COMP3
      PORT MAP (
         A => MEM_dest,
         B => RFA_register,
         F => F6
      );
   U_6 : COMP3
      PORT MAP (
         A => MEM_dest,
         B => RFB_register,
         F => F
      );
   U_9 : COMP3
      PORT MAP (
         A => EX_dest,
         B => RFB_register,
         F => F5
      );
   U_19 : COMP3
      PORT MAP (
         A => F12,
         B => RFA_register,
         F => F14
      );
   U_28 : COMP3
      PORT MAP (
         A => F20,
         B => RFB_register,
         F => F23
      );
   U_2 : AND2
      PORT MAP (
         A => F6,
         B => MEM_regWrite,
         F => F7
      );
   U_3 : AND2
      PORT MAP (
         A => F2,
         B => EX_regWrite,
         F => F3
      );
   U_7 : AND2
      PORT MAP (
         A => F,
         B => MEM_regWrite,
         F => F1
      );
   U_10 : AND2
      PORT MAP (
         A => F5,
         B => EX_regWrite,
         F => F4
      );
   U_20 : AND2
      PORT MAP (
         A => F14,
         B => F8,
         F => F15
      );
   U_29 : AND2
      PORT MAP (
         A => F23,
         B => F16,
         F => F22
      );
   U_4 : MUX2_16
      PORT MAP (
         A   => F24,
         B   => MEM_RFMux,
         SEL => F7,
         F   => A
      );
   U_5 : MUX2_16
      PORT MAP (
         A   => A,
         B   => EX_Data,
         SEL => F3,
         F   => RFA_Forwarded
      );
   U_8 : MUX2_16
      PORT MAP (
         A   => F25,
         B   => MEM_RFMux,
         SEL => F1,
         F   => A1
      );
   U_11 : MUX2_16
      PORT MAP (
         A   => A1,
         B   => EX_Data,
         SEL => F4,
         F   => RFB_Forwarded
      );
   U_21 : MUX2_16
      PORT MAP (
         A   => RFA_data,
         B   => F10,
         SEL => F15,
         F   => F24
      );
   U_30 : MUX2_16
      PORT MAP (
         A   => RFB_data,
         B   => F19,
         SEL => F22,
         F   => F25
      );
   U_12 : MUX4_16
      PORT MAP (
         A   => EX_MDR,
         B   => EX_ALU,
         C   => EX_BRAdd,
         D   => EX_PCPlus2,
         SEL => EXMuxsel,
         F   => EX_Data
      );
   U_13 : REG1
      PORT MAP (
         RESET_L => RESET,
         A       => MEM_regWrite,
         EN      => Load,
         CLK     => CLK,
         F       => F8
      );
   U_14 : REG1
      PORT MAP (
         RESET_L => RESET,
         A       => F8,
         EN      => Load,
         CLK     => CLK,
         F       => OPEN
      );
   U_22 : REG1
      PORT MAP (
         RESET_L => RESET,
         A       => MEM_regWrite,
         EN      => Load,
         CLK     => CLK,
         F       => F16
      );
   U_25 : REG1
      PORT MAP (
         RESET_L => RESET,
         A       => F16,
         EN      => Load,
         CLK     => CLK,
         F       => OPEN
      );
   U_15 : REG16
      PORT MAP (
         RESET_L => RESET,
         A       => MEM_RFMux,
         EN      => Load,
         CLK     => CLK,
         F       => F10
      );
   U_16 : REG16
      PORT MAP (
         RESET_L => RESET,
         A       => F10,
         EN      => Load,
         CLK     => CLK,
         F       => OPEN
      );
   U_23 : REG16
      PORT MAP (
         RESET_L => RESET,
         A       => MEM_RFMux,
         EN      => Load,
         CLK     => CLK,
         F       => F19
      );
   U_27 : REG16
      PORT MAP (
         RESET_L => RESET,
         A       => F19,
         EN      => Load,
         CLK     => CLK,
         F       => OPEN
      );
   U_17 : REG3
      PORT MAP (
         RESET_L => RESET,
         A       => MEM_dest,
         EN      => Load,
         CLK     => CLK,
         F       => F12
      );
   U_18 : REG3
      PORT MAP (
         RESET_L => RESET,
         A       => F12,
         EN      => Load,
         CLK     => CLK,
         F       => OPEN
      );
   U_24 : REG3
      PORT MAP (
         RESET_L => RESET,
         A       => MEM_dest,
         EN      => Load,
         CLK     => CLK,
         F       => F20
      );
   U_26 : REG3
      PORT MAP (
         RESET_L => RESET,
         A       => F20,
         EN      => Load,
         CLK     => CLK,
         F       => OPEN
      );

END struct;
