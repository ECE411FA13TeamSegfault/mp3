-- VHDL Entity ece411.mp2_CPU.symbol
--
-- Created:
--          by - li151.ews (siebl-0220-16.ews.illinois.edu)
--          at - 14:59:09 10/28/13
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2012.1 (Build 6)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.NUMERIC_STD.all;

LIBRARY ece411;
USE ece411.LC3b_types.all;

ENTITY mp2_CPU IS
   PORT( 
      RESET_L : IN     std_logic;
      START_H : IN     std_logic
   );

-- Declarations

END mp2_CPU ;

--
-- VHDL Architecture ece411.mp2_CPU.struct
--
-- Created:
--          by - li151.ews (siebl-0220-16.ews.illinois.edu)
--          at - 14:59:09 10/28/13
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2012.1 (Build 6)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.NUMERIC_STD.all;

LIBRARY ece411;
USE ece411.LC3b_types.all;


ARCHITECTURE struct OF mp2_CPU IS

   -- Architecture declarations

   -- Internal signal declarations
   SIGNAL ADDR1Muxsel   : std_logic;
   SIGNAL ADDR2MuxSel   : std_logic;
   SIGNAL ADDRESS       : LC3b_word;
   SIGNAL ADDRESS_0     : std_logic;
   SIGNAL ALUMuxSel     : std_logic;
   SIGNAL ALUop         : LC3b_aluop;
   SIGNAL CheckN        : std_logic;
   SIGNAL CheckP        : std_logic;
   SIGNAL CheckZ        : std_logic;
   SIGNAL DATAIN        : LC3b_word;
   SIGNAL DATAOUT       : LC3b_word;
   SIGNAL DRMuxSel      : std_logic;
   SIGNAL GenCCMuxSel   : std_logic;
   SIGNAL LoadIR        : std_logic;
   SIGNAL LoadMAR       : std_logic;
   SIGNAL LoadMDR       : std_logic;
   SIGNAL LoadNZP       : std_logic;
   SIGNAL LoadPC        : std_logic;
   SIGNAL MARMuxSel     : LC3b_4Mux_Sel;
   SIGNAL MDRMux2Sel    : LC3b_4mux_sel;
   SIGNAL MDRMuxSel     : std_logic;
   SIGNAL MREAD_L       : std_logic;
   SIGNAL MRESP_H       : std_logic;
   SIGNAL MWRITEH_L     : std_logic;
   SIGNAL MWRITEL_L     : std_logic;
   SIGNAL Opcode        : LC3b_opcode;
   SIGNAL PCMuxSel      : LC3b_4Mux_Sel;
   SIGNAL RFMux2Sel     : LC3b_4mux_sel;
   SIGNAL RFMuxSel      : LC3b_4Mux_Sel;
   SIGNAL RegWrite      : std_logic;
   SIGNAL StoreMuxsel   : std_logic;
   SIGNAL StoreSR       : std_logic;
   SIGNAL bit11         : std_logic;
   SIGNAL clk           : std_logic := '0';
   SIGNAL n             : std_logic;
   SIGNAL offset6MuxSel : std_logic;
   SIGNAL p             : std_logic;
   SIGNAL shftop        : LC3b_shftop;
   SIGNAL z             : std_logic;


   -- Component Declarations
   COMPONENT CLKgen
   PORT (
      clk : INOUT  std_logic  := '0'
   );
   END COMPONENT;
   COMPONENT Control
   PORT (
      ADDRESS_0     : IN     std_logic ;
      CheckN        : IN     std_logic ;
      CheckP        : IN     std_logic ;
      CheckZ        : IN     std_logic ;
      MRESP_H       : IN     std_logic ;
      Opcode        : IN     LC3b_opcode ;
      RESET_L       : IN     std_logic ;
      START_H       : IN     std_logic ;
      bit11         : IN     std_logic ;
      clk           : IN     std_logic ;
      n             : IN     std_logic ;
      p             : IN     std_logic ;
      shftop        : IN     LC3b_shftop ;
      z             : IN     std_logic ;
      ADDR2MuxSel   : OUT    std_logic ;
      ALUMuxSel     : OUT    std_logic ;
      ALUop         : OUT    LC3b_aluop ;
      DRMuxSel      : OUT    std_logic ;
      GenCCMuxSel   : OUT    std_logic ;
      LoadIR        : OUT    std_logic ;
      LoadMAR       : OUT    std_logic ;
      LoadMDR       : OUT    std_logic ;
      LoadNZP       : OUT    std_logic ;
      LoadPC        : OUT    std_logic ;
      MARMuxSel     : OUT    LC3b_4Mux_Sel ;
      MDRMux2Sel    : OUT    LC3b_4mux_sel ;
      MDRMuxSel     : OUT    std_logic ;
      MREAD_L       : OUT    std_logic ;
      MWRITEH_L     : OUT    std_logic ;
      MWRITEL_L     : OUT    std_logic ;
      PCMuxSel      : OUT    LC3b_4Mux_Sel ;
      RFMux2Sel     : OUT    LC3b_4mux_sel ;
      RFMuxSel      : OUT    LC3b_4Mux_Sel ;
      RegWrite      : OUT    std_logic ;
      StoreSR       : OUT    std_logic ;
      offset6MuxSel : OUT    std_logic 
   );
   END COMPONENT;
   COMPONENT Datapath
   PORT (
      ADDR1Muxsel : IN     std_logic ;
      ADDR2MuxSel : IN     std_logic ;
      ALUMuxSel   : IN     std_logic ;
      ALUop       : IN     LC3b_aluop ;
      DATAIN      : IN     LC3b_word ;
      DRMuxSel    : IN     std_logic ;
      GenCCMuxSel : IN     std_logic ;
      LoadIR      : IN     std_logic ;
      LoadMAR     : IN     std_logic ;
      LoadMDR     : IN     std_logic ;
      LoadNZP     : IN     std_logic ;
      LoadPC      : IN     std_logic ;
      MARMuxSel   : IN     LC3b_4Mux_Sel ;
      MDRMuxSel   : IN     std_logic ;
      PCMuxSel    : IN     LC3b_4Mux_Sel ;
      RESET_L     : IN     std_logic ;
      RFMux2Sel   : IN     LC3b_4mux_sel ;
      RFMuxSel    : IN     LC3b_4Mux_Sel ;
      RegWrite    : IN     std_logic ;
      StoreMuxsel : IN     std_logic ;
      clk         : IN     std_logic ;
      CheckN      : OUT    std_logic ;
      CheckP      : OUT    std_logic ;
      CheckZ      : OUT    std_logic ;
      DATAOUT     : OUT    LC3b_word ;
      n           : OUT    std_logic ;
      p           : OUT    std_logic ;
      z           : OUT    std_logic 
   );
   END COMPONENT;

   -- Optional embedded configurations
   -- pragma synthesis_off
   FOR ALL : CLKgen USE ENTITY ece411.CLKgen;
   FOR ALL : Control USE ENTITY ece411.Control;
   FOR ALL : Datapath USE ENTITY ece411.Datapath;
   -- pragma synthesis_on


BEGIN

   -- Instance port mappings.
   I0 : CLKgen
      PORT MAP (
         clk => clk
      );
   ControlUnit : Control
      PORT MAP (
         ADDRESS_0     => ADDRESS_0,
         CheckN        => CheckN,
         CheckP        => CheckP,
         CheckZ        => CheckZ,
         MRESP_H       => MRESP_H,
         Opcode        => Opcode,
         RESET_L       => RESET_L,
         START_H       => START_H,
         bit11         => bit11,
         clk           => clk,
         n             => n,
         p             => p,
         shftop        => shftop,
         z             => z,
         ADDR2MuxSel   => ADDR2MuxSel,
         ALUMuxSel     => ALUMuxSel,
         ALUop         => ALUop,
         DRMuxSel      => DRMuxSel,
         GenCCMuxSel   => GenCCMuxSel,
         LoadIR        => LoadIR,
         LoadMAR       => LoadMAR,
         LoadMDR       => LoadMDR,
         LoadNZP       => LoadNZP,
         LoadPC        => LoadPC,
         MARMuxSel     => MARMuxSel,
         MDRMux2Sel    => MDRMux2Sel,
         MDRMuxSel     => MDRMuxSel,
         MREAD_L       => MREAD_L,
         MWRITEH_L     => MWRITEH_L,
         MWRITEL_L     => MWRITEL_L,
         PCMuxSel      => PCMuxSel,
         RFMux2Sel     => RFMux2Sel,
         RFMuxSel      => RFMuxSel,
         RegWrite      => RegWrite,
         StoreSR       => StoreSR,
         offset6MuxSel => offset6MuxSel
      );
   theDatapath : Datapath
      PORT MAP (
         ADDR1Muxsel => ADDR1Muxsel,
         ADDR2MuxSel => ADDR2MuxSel,
         ALUMuxSel   => ALUMuxSel,
         ALUop       => ALUop,
         DATAIN      => DATAIN,
         DRMuxSel    => DRMuxSel,
         GenCCMuxSel => GenCCMuxSel,
         LoadIR      => LoadIR,
         LoadMAR     => LoadMAR,
         LoadMDR     => LoadMDR,
         LoadNZP     => LoadNZP,
         LoadPC      => LoadPC,
         MARMuxSel   => MARMuxSel,
         MDRMuxSel   => MDRMuxSel,
         PCMuxSel    => PCMuxSel,
         RESET_L     => RESET_L,
         RFMux2Sel   => RFMux2Sel,
         RFMuxSel    => RFMuxSel,
         RegWrite    => RegWrite,
         StoreMuxsel => StoreMuxsel,
         clk         => clk,
         CheckN      => CheckN,
         CheckP      => CheckP,
         CheckZ      => CheckZ,
         DATAOUT     => DATAOUT,
         n           => n,
         p           => p,
         z           => z
      );

END struct;
